#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

// ⭐ この行を追加して、X軸（左右）のスクロール方向を反転させます

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp LEFT_ARROW>,
    //         <&kp RIGHT_ARROW>,
    //         <&kp DOWN_ARROW>,
    //         <&kp UP_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <27 28>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <27 16>;
        };

        Exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <18 13>;
        };

        All_Delete {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <40 18>;
        };

        Sft+Enter {
            bindings = <&kp LS(ENTER)>;
            key-positions = <41 18>;
        };

        Cmd_Enter {
            bindings = <&kp LG(ENTER)>;
            key-positions = <41 13>;
        };

        rclk {
            bindings = <&mkp MB2>;
            key-positions = <15 39>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    // #includeのあとのあたりにスクロール量を変更

    #define ZMK_POINTING_DEFAULT_SCRL_VAL 100

    //  behaviors に追加
    // 新しいスクロール動作の追加

    scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        // 追加: スクロールのタップ時間を設定 (20ms)

        tap-ms = <20>;
    };

    // 設定したいレイヤー

    sensor-bindings = <&scroll_up_down>;

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        TYPING {
            bindings = <
&kp Q            &kp W          &kp F        &kp P      &kp G                                                  &kp J                   &kp L  &kp U                   &kp Y             &kp ESCAPE
&kp A            &kp R          &kp S        &kp T      &kp D         &mkp LCLK           &kp MINUS            &kp H                   &kp N  &kp E                   &kp I             &kp O
&kp Z            &kp X          &kp C        &kp V      &kp B         &kp LANGUAGE_2      &kp LANGUAGE_1       &kp K                   &kp M  &mt LEFT_CONTROL COMMA  &mt LEFT_ALT DOT  &kp SQT
&kp LC(LS(TAB))  &kp LS(LG(T))  &kp LC(TAB)  &lt 5 TAB  &lt 7 DELETE  &lt 3 SPACE         &mt RSHFT BACKSPACE  &mt LEFT_COMMAND ENTER                                                   &kp QUESTION
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(N5)                            &kp PLUS        &kp PIPE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp SEMICOLON     &kp COLON         &kp SQT           &kp DOUBLE_QUOTES  &kp GRAVE   &trans      &kp ASTERISK  &kp MINUS       &kp SLASH      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL
&kp LS(NUMBER_6)  &kp LS(N7)        &kp LS(N8)        &kp LS(N9)         &kp TILDE   &trans      &kp HASH      &kp UNDERSCORE  &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans            &trans            &trans            &trans             &trans      &trans      &trans        &trans                                                                      &trans
            >;
        };

        NEVER_USE {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                            &kp PLUS        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &kp ASTERISK  &kp MINUS       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans      &kp SLASH     &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans   &trans   &trans   &trans   &trans   &trans      &trans        &trans                                                    &trans
            >;
        };

        FUNCTION_CONTROL {
            bindings = <
&trans        &trans        &trans            &trans    &trans                             &trans    &trans          &kp UP_ARROW                       &trans           &trans
&kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &mkp MB2  &kp LG(LC(F))  &trans      &trans  &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW                     &kp RIGHT_ARROW  &kp END
&kp F14       &kp F15       &mkp MB4          &mkp MB5  &trans         &trans      &trans  &trans    &trans          &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &trans           &trans
&trans        &trans        &trans            &trans    &trans         &trans      &trans  &trans                                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LC(A)  &mkp MB3  &kp LC(E)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1   &mkp MB3  &mkp MB2   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4   &mkp MB3  &mkp MB5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        NUM_SYMBOLS {
            bindings = <
&kp TILDE     &kp PIPE       &kp LBKT        &kp RBKT         &kp SEMICOLON                                     &kp PLUS        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL
&kp DOLLAR    &kp SLASH      &kp LPAR        &kp RPAR         &kp DOUBLE_QUOTES  &trans           &kp ASTERISK  &kp MINUS       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
&kp QUESTION  &kp BACKSLASH  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp COLON          &kp AT_SIGN      &kp HASH      &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERCENT
&trans        &trans         &trans          &trans           &trans             &trans           &trans        &trans                                                    &trans
            >;
        };
    };
};
